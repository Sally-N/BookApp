{"ast":null,"code":"// import axios from 'axios';\n// import React, { useState } from 'react';\n// import { useForm } from 'react-hook-form';\n// import { ChatCompletionRequestMessage } from \"openai\";\n// import { useNavigate } from 'react-router-dom';\n\n// const Chat = () => {\n//     const [messages, setMessages] = useState<ChatCompletionRequestMessage[]>([]);\n//     const navigate = useNavigate()\n//     const form = useForm({\n//         defaultValues: {\n//             prompt: ''\n//         }\n//     });\n\n//     const isloading = form.formState.isSubmitting;\n\n//     const onSubmit = async (values) => {\n//         try {\n//             const userMessage = { role: \"user\", content: values.prompt };\n//             const newMessages = [...messages, userMessage];\n\n//             const response = await axios.post('/api/conversation', { messages: newMessages })\n//             setMessages((current) => [...current, userMessage, response.data]);\n\n//             form.reset();\n//         } catch (error) {\n//             if (error?.response?.status === 403) {\n//                 proModal.onOpen();\n//             } else {\n//                 toast.error(\"Something went wrong.\");\n//             }\n//         } finally {\n//             navigate(0);\n//         }\n//     }\n\n//     return (\n//         <div>\n//             <div className=\"px-4 lg:px-8\">\n//                 <div>\n//                     <Form {...form}>\n//                         <form\n//                             onSubmit={form.handleSubmit(onSubmit)}\n//                             className=\"\n//                 rounded-lg \n//                 border \n//                 w-full \n//                 p-4 \n//                 px-3 \n//                 md:px-6 \n//                 focus-within:shadow-sm\n//                 grid\n//                 grid-cols-12\n//                 gap-2\n//               \"\n//                         >\n//                             <FormField\n//                                 name=\"prompt\"\n//                                 render={({ field }) => (\n//                                     <FormItem className=\"col-span-12 lg:col-span-10\">\n//                                         <FormControl className=\"m-0 p-0\">\n//                                             <Input\n//                                                 className=\"border-0 outline-none focus-visible:ring-0 focus-visible:ring-transparent\"\n//                                                 disabled={isLoading}\n//                                                 placeholder=\"How do I calculate the radius of a circle?\"\n//                                                 {...field}\n//                                             />\n//                                         </FormControl>\n//                                     </FormItem>\n//                                 )}\n//                             />\n//                             <Button className=\"col-span-12 lg:col-span-2 w-full\" type=\"submit\" disabled={isLoading} size=\"icon\">\n//                                 Generate\n//                             </Button>\n//                         </form>\n//                     </Form>\n//                 </div>\n//                 <div className=\"space-y-4 mt-4\">\n//                     {isLoading && (\n//                         <div className=\"p-8 rounded-lg w-full flex items-center justify-center bg-muted\">\n//                             <Loader />\n//                         </div>\n//                     )}\n//                     {messages.length === 0 && !isLoading && (\n//                         <Empty label=\"No conversation started.\" />\n//                     )}\n//                     <div className=\"flex flex-col-reverse gap-y-4\">\n//                         {messages.map((message) => (\n//                             <div\n//                                 key={message.content}\n//                                 className={cn(\n//                                     \"p-8 w-full flex items-start gap-x-8 rounded-lg\",\n//                                     message.role === \"user\" ? \"bg-white border border-black/10\" : \"bg-muted\",\n//                                 )}\n//                             >\n//                                 {message.role === \"user\" ? <UserAvatar /> : <BotAvatar />}\n//                                 <p className=\"text-sm\">\n//                                     {message.content}\n//                                 </p>\n//                             </div>\n//                         ))}\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default Chat;","map":{"version":3,"names":[],"sources":["C:/Users/PC/CODE/BookShelf/src/Pages/Chat/Chat.jsx"],"sourcesContent":["// import axios from 'axios';\r\n// import React, { useState } from 'react';\r\n// import { useForm } from 'react-hook-form';\r\n// import { ChatCompletionRequestMessage } from \"openai\";\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n\r\n// const Chat = () => {\r\n//     const [messages, setMessages] = useState<ChatCompletionRequestMessage[]>([]);\r\n//     const navigate = useNavigate()\r\n//     const form = useForm({\r\n//         defaultValues: {\r\n//             prompt: ''\r\n//         }\r\n//     });\r\n\r\n//     const isloading = form.formState.isSubmitting;\r\n\r\n//     const onSubmit = async (values) => {\r\n//         try {\r\n//             const userMessage = { role: \"user\", content: values.prompt };\r\n//             const newMessages = [...messages, userMessage];\r\n\r\n//             const response = await axios.post('/api/conversation', { messages: newMessages })\r\n//             setMessages((current) => [...current, userMessage, response.data]);\r\n\r\n//             form.reset();\r\n//         } catch (error) {\r\n//             if (error?.response?.status === 403) {\r\n//                 proModal.onOpen();\r\n//             } else {\r\n//                 toast.error(\"Something went wrong.\");\r\n//             }\r\n//         } finally {\r\n//             navigate(0);\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             <div className=\"px-4 lg:px-8\">\r\n//                 <div>\r\n//                     <Form {...form}>\r\n//                         <form\r\n//                             onSubmit={form.handleSubmit(onSubmit)}\r\n//                             className=\"\r\n//                 rounded-lg \r\n//                 border \r\n//                 w-full \r\n//                 p-4 \r\n//                 px-3 \r\n//                 md:px-6 \r\n//                 focus-within:shadow-sm\r\n//                 grid\r\n//                 grid-cols-12\r\n//                 gap-2\r\n//               \"\r\n//                         >\r\n//                             <FormField\r\n//                                 name=\"prompt\"\r\n//                                 render={({ field }) => (\r\n//                                     <FormItem className=\"col-span-12 lg:col-span-10\">\r\n//                                         <FormControl className=\"m-0 p-0\">\r\n//                                             <Input\r\n//                                                 className=\"border-0 outline-none focus-visible:ring-0 focus-visible:ring-transparent\"\r\n//                                                 disabled={isLoading}\r\n//                                                 placeholder=\"How do I calculate the radius of a circle?\"\r\n//                                                 {...field}\r\n//                                             />\r\n//                                         </FormControl>\r\n//                                     </FormItem>\r\n//                                 )}\r\n//                             />\r\n//                             <Button className=\"col-span-12 lg:col-span-2 w-full\" type=\"submit\" disabled={isLoading} size=\"icon\">\r\n//                                 Generate\r\n//                             </Button>\r\n//                         </form>\r\n//                     </Form>\r\n//                 </div>\r\n//                 <div className=\"space-y-4 mt-4\">\r\n//                     {isLoading && (\r\n//                         <div className=\"p-8 rounded-lg w-full flex items-center justify-center bg-muted\">\r\n//                             <Loader />\r\n//                         </div>\r\n//                     )}\r\n//                     {messages.length === 0 && !isLoading && (\r\n//                         <Empty label=\"No conversation started.\" />\r\n//                     )}\r\n//                     <div className=\"flex flex-col-reverse gap-y-4\">\r\n//                         {messages.map((message) => (\r\n//                             <div\r\n//                                 key={message.content}\r\n//                                 className={cn(\r\n//                                     \"p-8 w-full flex items-start gap-x-8 rounded-lg\",\r\n//                                     message.role === \"user\" ? \"bg-white border border-black/10\" : \"bg-muted\",\r\n//                                 )}\r\n//                             >\r\n//                                 {message.role === \"user\" ? <UserAvatar /> : <BotAvatar />}\r\n//                                 <p className=\"text-sm\">\r\n//                                     {message.content}\r\n//                                 </p>\r\n//                             </div>\r\n//                         ))}\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Chat;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}